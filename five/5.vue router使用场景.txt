一、传统开发模式
    www.xxx.com -- index.html
    www.xxx.com/about -- about.html
    www.xxx.com/xxx -- xxx.html
    用户每次切换页面，都是请求新的html，都需要重新加载，导致用户体验差

二、单页面SPA开发模式
    www.xxx.com -- index.html
    www.xxx.com/about -- index.html
    www.xxx.com/xxx -- index.html
    简单的说是，访问不同的页面都是在相同的html页面，不需要重新加载新的页面，只需要请求后台并将相应数据渲染到页面指定位置

三、vue router 解决的问题
    监听URL的变化，并在变化前后执行相应的逻辑
    不同的URL对应不同的组件
    提供多种方式改变URL的API（URL的改变不能导致浏览器的刷新）

四、使用方式
    提供一个路由配置表，不同URL对应不同组件的配置
    初始化路由实例new VueRouter()
    挂在到Vue实例上
    提供一个路由占位，用来挂载URL匹配到的组件

五、
    $router进行路由跳转
    $route获取路由信息


使用脚手架创建工程
npm install -g @vue/cli (安装3.0版本脚手架，已安装可忽略此步骤)
vue create vuex-demo1 （创建工程）
cd vuex-demo1 （进入工程目录）
npm install vue-router（安装vue-router包）
npm run serve （启动工程）